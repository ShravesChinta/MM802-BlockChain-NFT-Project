{"ast":null,"code":"var _jsxFileName = \"/Users/sravantichinta/Desktop/MMBlockChain/BlockChain_Project/src/Avg_Snow_Monthly_Year_Wise.js\";\nimport React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Avg_Snow_Monthly_Year_Wise extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const endpoint = \"https://data.edmonton.ca/resource/s4ws-tdws.json?$query=SELECT%20year,%20avg(total_snow_cm)%20group%20by%20year%20order%20by%20year\";\n    fetch(endpoint).then(response => response.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  transformData(data) {\n    let plot_data = [];\n    let y = [];\n    data.map(each => {\n      var snow_monthly = parseFloat(each.avg_total_snow_cm);\n      y.push(snow_monthly);\n    });\n    plot_data['y'] = y;\n    console.log(y);\n    return plot_data;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: [{\n            type: 'spline',\n            mode: 'lines',\n            x: [\"2000\", \"2001\", \"2002\", \"2003\", \"2004\", \"2005\", \"2006\", \"2007\", \"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\"],\n            y: this.transformData(this.state.data)['y'],\n            marker: {\n              color: 'violet'\n            }\n          }],\n          layout: {\n            width: 1000,\n            height: 800,\n            title: \"Average Yearly Snowfall in Edmonton form 2000-2022\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Avg_Snow_Monthly_Year_Wise;","map":{"version":3,"sources":["/Users/sravantichinta/Desktop/MMBlockChain/BlockChain_Project/src/Avg_Snow_Monthly_Year_Wise.js"],"names":["React","Component","Plot","Avg_Snow_Monthly_Year_Wise","constructor","props","state","data","componentDidMount","endpoint","fetch","then","response","json","setState","transformData","plot_data","y","map","each","snow_monthly","parseFloat","avg_total_snow_cm","push","console","log","render","type","mode","x","marker","color","width","height","title"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,WAAP;;;AACA,MAAMC,0BAAN,SAAyCF,SAAzC,CAAkD;AAC9CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAX;AACH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,QAAQ,GAAC,qIAAf;AACAC,IAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMJ,IAAI,IAAE;AACR,WAAKO,QAAL,CAAc;AAACP,QAAAA,IAAI,EAACA;AAAN,OAAd;AACH,KAJD;AAMH;;AAEDQ,EAAAA,aAAa,CAAER,IAAF,EAAQ;AACb,QAAIS,SAAS,GAAG,EAAhB;AACA,QAAIC,CAAC,GAAC,EAAN;AAEAV,IAAAA,IAAI,CAACW,GAAL,CAASC,IAAI,IAAI;AACb,UAAIC,YAAY,GAACC,UAAU,CAACF,IAAI,CAACG,iBAAN,CAA3B;AACAL,MAAAA,CAAC,CAACM,IAAF,CAAOH,YAAP;AAEH,KAJD;AAOAJ,IAAAA,SAAS,CAAC,GAAD,CAAT,GAAeC,CAAf;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ;AACA,WAAOD,SAAP;AACH;;AAGDU,EAAAA,MAAM,GAAG;AACL,wBAEI;AAAA,6BACI;AAAA,+BACD,QAAC,IAAD;AACK,UAAA,IAAI,EAAI,CACA;AAACC,YAAAA,IAAI,EAAE,QAAP;AACCC,YAAAA,IAAI,EAAE,OADP;AAECC,YAAAA,CAAC,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,EAA6B,MAA7B,EAAoC,MAApC,EAA2C,MAA3C,EAAkD,MAAlD,EAAyD,MAAzD,EAAgE,MAAhE,EAAuE,MAAvE,EAA8E,MAA9E,EAAqF,MAArF,EAA4F,MAA5F,EAAmG,MAAnG,EAA0G,MAA1G,EAAiH,MAAjH,EAAwH,MAAxH,EAA+H,MAA/H,EAAsI,MAAtI,EAA6I,MAA7I,EAAoJ,MAApJ,EAA2J,MAA3J,CAFJ;AAGCZ,YAAAA,CAAC,EAAE,KAAKF,aAAL,CAAmB,KAAKT,KAAL,CAAWC,IAA9B,EAAoC,GAApC,CAHJ;AAICuB,YAAAA,MAAM,EAAE;AAAEC,cAAAA,KAAK,EAAC;AAAR;AAJT,WADA,CADb;AAUS,UAAA,MAAM,EAAE;AAACC,YAAAA,KAAK,EAAC,IAAP;AAAYC,YAAAA,MAAM,EAAC,GAAnB;AAAuBC,YAAAA,KAAK,EAAC;AAA7B;AAVjB;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAmBH;;AApDyC;;AAuD1C,eAAe/B,0BAAf","sourcesContent":["\nimport React, {Component} from 'react';\nimport Plot from 'react-plotly.js';\nimport './App.css';\nclass Avg_Snow_Monthly_Year_Wise extends Component{\n    constructor(props){\n        super(props);\n        this.state={data:[]}\n    }\n    componentDidMount(){\n        const endpoint=\"https://data.edmonton.ca/resource/s4ws-tdws.json?$query=SELECT%20year,%20avg(total_snow_cm)%20group%20by%20year%20order%20by%20year\"\n        fetch(endpoint)\n        .then(response =>response.json())\n        .then(data=>{\n            this.setState({data:data})\n        })\n\n    }\n        \n    transformData (data) {\n            let plot_data = [];\n            let y=[];\n            \n            data.map(each => {  \n                var snow_monthly=parseFloat(each.avg_total_snow_cm)\n                y.push(snow_monthly)   \n            \n            }\n            )  \n     \n            plot_data['y']=y\n            console.log(y)\n            return plot_data\n        }\n\n\t\n        render() {\n            return (\n      \n                <div>\n                    <center>\n                   <Plot\n                        data = {[\n                                {type: 'spline',\n                                 mode: 'lines',\n                                 x: [\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\"],\n                                 y: this.transformData(this.state.data)['y'],\n                                 marker: { color:'violet'}\n                                }\n                            ]}\n                   \n                            layout={{width:1000,height:800,title:\"Average Yearly Snowfall in Edmonton form 2000-2022\"}}\n                     />\n                </center>     \n                </div>\n            )\n        }\n        }\n        \n        export default Avg_Snow_Monthly_Year_Wise"]},"metadata":{},"sourceType":"module"}